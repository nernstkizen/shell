newdata3[,2]<-as.numeric(newdata3[,2])
newdata3[,3]<-as.numeric(newdata3[,3])
newdata3[,4]<-as.numeric(newdata3[,4])
newdata3[,5]<-as.numeric(newdata3[,5])
newdata3<-group_by(newdata3,UWI,latitude,longitude)
sumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE),waterporosity=mean(waterporosity,na.rm=TRUE))
#sumnewdata3<-filter(sumnewdata1,!is.na(Tmax))
###Variogram check#####
#lookb=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
#lookc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='cloud')
#lookbc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,bin.cloud=TRUE)
#looks=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='sm',band=1)
#par(mfrow=c(2,2))
#plot(lookb, main="binned variogram")
#plot(lookc, main="variogram cloud")
#plot(lookbc, bin.cloud=TRUE, main="clouds for binned variogram")
#plot(looks, main="smoothed variogram")
#look4=variog4(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
##Kriging for Five variables
KrigTmax<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Tmax)
KrigS2<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$S2)
KrigRomeasure<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Romeasure)
KrigClayChlo<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$ClayChlo)
Krigwaterporosity<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$waterporosity)
## Predict for production well
#From Raw Data
a <- read.csv("012_Prod_Well.csv", as.is=T)
a <- a %>% select(Entity, API, Surface.Latitude, Surface.Longitude) %>% filter(!is.na(API),!is.na(Surface.Latitude),!is.na(Surface.Longitude))  # Location
b <- read.csv("013_Prod_Header.csv", as.is=T)
b <- b %>% select(Entity, Date.Production.Start) %>% filter(!is.na(Date.Production.Start))  # Prod start date
ab <- left_join(a, b, by="Entity")
ab <- ab %>% distinct(API) %>% rename(Uwi=API, Latitude=Surface.Latitude, Longitude=Surface.Longitude)
ab$Date.Production.Start <- as.Date(ab$Date.Production.Start, format="%Y-%m-%d")
prod.date.loc <- ab
c<-read.csv("020_Well_Header.csv",as.is=T)
c<-c %>% distinct(UWI) %>% select (Uwi=UWI,Depth.True.Vertical)
abc<- inner_join(ab,c,by='Uwi')
abc<-abc[,-5]
# Kaggle oil update
setwd(file.path(repo_path, "Kaggle/Final/RulesBasedApproach Oct 8/RulesBasedApproach Oct 8"))
y <- read.csv("Rules features using recent and Jan 2014 data.csv")
y <- select(y,Uwi)  # 2631 x 1
abc<-inner_join(abc,y,by='Uwi')
predic.Tmax<-predict(KrigTmax,as.matrix(abc[,3:4]))
predic.S2<-predict(KrigS2,as.matrix(abc[,3:4]))
predic.Romeasure<-predict(KrigRomeasure,as.matrix(abc[,3:4]))
predic.ClayChlo<-predict(KrigClayChlo,as.matrix(abc[,3:4]))
predic.waterporosity<-predict(Krigwaterporosity,as.matrix(abc[,3:4]))
newabc<-cbind(abc,Tmax=predic.Tmax,S2=predic.S2,Romeasure=predic.Romeasure,ClayChlo=predic.ClayChlo,waterporosity=predic.waterporosity)
setwd("Z:/project/data")
write.csv(newabc,file='Interpolation for top five variables for production well(no truncation).csv')
##########Use truncate mean rather than mean(10% on both side)#####################
Trunsumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE,trim=0.1),S2=mean(S2,na.rm=TRUE,trim=0.1),Romeasure=mean(Romeasure,na.rm=TRUE,trim=0.1))
#Trunsumnewdata1<-filter(Trunsumnewdata1,!is.na(Tmax))
Trunsumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE,trim=0.1),waterporosity=mean(waterporosity,na.rm=TRUE,trim=0.1))
#Trunsumnewdata3<-filter(Trunsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
TrunKrigTmax<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Tmax)
TrunKrigS2<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$S2)
TrunKrigRomeasure<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Romeasure)
TrunKrigClayChlo<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$ClayChlo)
TrunKrigwaterporosity<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$waterporosity)
## Predict for production well
Trunpredic.Tmax<-predict(TrunKrigTmax,as.matrix(abc[,3:4]))
Trunpredic.S2<-predict(TrunKrigS2,as.matrix(abc[,3:4]))
Trunpredic.Romeasure<-predict(TrunKrigRomeasure,as.matrix(abc[,3:4]))
Trunpredic.ClayChlo<-predict(TrunKrigClayChlo,as.matrix(abc[,3:4]))
Trunpredic.waterporosity<-predict(TrunKrigwaterporosity,as.matrix(abc[,3:4]))
Trunnewabc<-cbind(abc,Tmax=Trunpredic.Tmax,S2=Trunpredic.S2,Romeasure=Trunpredic.Romeasure,ClayChlo=Trunpredic.ClayChlo,waterporosity=Trunpredic.waterporosity)
setwd("Z:/project/data")
write.csv(Trunnewabc,file='Interpolation for top five variables for production well(10% truncation).csv')
##########Use mean without outliers#####################
#Define a function to calculate mean without outliers
normal_mean <- function(x) {
qnt <- quantile(x, probs=c(.25, .75),na.rm=TRUE)
H <- 1.5 * IQR(x,na.rm=TRUE)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
return(mean(y,na.rm=TRUE))
}
Norsumnewdata1<-summarise(newdata1,Tmax=normal_mean(Tmax),S2=normal_mean(S2),Romeasure=normal_mean(Romeasure))
#Norsumnewdata1<-filter(Norsumnewdata1,!is.na(Tmax))
Norsumnewdata3<-summarise(newdata3,ClayChlo=normal_mean(ClayChlo),waterporosity=normal_mean(waterporosity))
#Norsumnewdata3<-filter(Norsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
NorKrigTmax<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Tmax)
NorKrigS2<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$S2)
NorKrigRomeasure<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Romeasure)
NorKrigClayChlo<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$ClayChlo)
NorKrigwaterporosity<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$waterporosity)
## Predict for production well
Norpredic.Tmax<-predict(NorKrigTmax,as.matrix(abc[,3:4]))
Norpredic.S2<-predict(NorKrigS2,as.matrix(abc[,3:4]))
Norpredic.Romeasure<-predict(NorKrigRomeasure,as.matrix(abc[,3:4]))
Norpredic.ClayChlo<-predict(NorKrigClayChlo,as.matrix(abc[,3:4]))
Norpredic.waterporosity<-predict(NorKrigwaterporosity,as.matrix(abc[,3:4]))
Nornewabc<-cbind(abc,Tmax=Norpredic.Tmax,S2=Norpredic.S2,Romeasure=Norpredic.Romeasure,ClayChlo=Norpredic.ClayChlo,waterporosity=Norpredic.waterporosity)
setwd("Z:/project/data")
write.csv(Nornewabc,file='Interpolation for top five variables for production well(outlier removed).csv')
?
)
library(kriging)
library(dplyr)
library(geoR)
library(fields)
library(ggplot2)
repo_path<-"Z:/project/data"
setwd("Z:/project/data")
################################
####Interpolate Five variables
##################################
###Read data#####
data1<-read.csv('031_Core_GeoChem.csv',header=TRUE,as.is=TRUE)
data1<-data1[-1,]
#data2<-read.csv('032_Core_RCA.csv',header=TRUE)
data3<-read.csv('033_Core_ShaleGas.csv',header=TRUE,as.is=TRUE)
data3<-data3[-1,]
#data4<-read.csv('034_Core_SCAL.csv',header=TRUE)
newdata1<-select(data1,UWI=Unique.Private.Well.ID, latitude=Well.Latitude, longitude=Well.Longitude
,Tmax=Tmax..degrees.C., S2=Hydrocarbon...S2..mg.g., Romeasure=Ro.Measured..percent.)
newdata1<-arrange(newdata1,UWI)
newdata1[,2]<-as.numeric(newdata1[,2])
newdata1[,3]<-as.numeric(newdata1[,3])
newdata1[,4]<-as.numeric(newdata1[,4])
newdata1[,5]<-as.numeric(newdata1[,5])
newdata1[,6]<-as.numeric(newdata1[,6])
newdata1<-group_by(newdata1,UWI,latitude,longitude)
sumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE),S2=mean(S2,na.rm=TRUE),Romeasure=mean(Romeasure,na.rm=TRUE))
#sumnewdata1<-filter(sumnewdata1,!is.na(Tmax))
newdata3<-select(data3,UWI=Unique.Private.Well.ID, latitude=Well.Latitude, longitude=Well.Longitude,
ClayChlo=XRD.Clay.Fraction.Chlorite..weight.percent.,
waterporosity=GRI.Water.Filled.Porosity..percent.)
newdata3<-arrange(newdata3,UWI)
newdata3[,2]<-as.numeric(newdata3[,2])
newdata3[,3]<-as.numeric(newdata3[,3])
newdata3[,4]<-as.numeric(newdata3[,4])
newdata3[,5]<-as.numeric(newdata3[,5])
newdata3<-group_by(newdata3,UWI,latitude,longitude)
sumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE),waterporosity=mean(waterporosity,na.rm=TRUE))
#sumnewdata3<-filter(sumnewdata1,!is.na(Tmax))
###Variogram check#####
#lookb=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
#lookc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='cloud')
#lookbc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,bin.cloud=TRUE)
#looks=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='sm',band=1)
#par(mfrow=c(2,2))
#plot(lookb, main="binned variogram")
#plot(lookc, main="variogram cloud")
#plot(lookbc, bin.cloud=TRUE, main="clouds for binned variogram")
#plot(looks, main="smoothed variogram")
#look4=variog4(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
##Kriging for Five variables
KrigTmax<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Tmax)
KrigS2<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$S2)
KrigRomeasure<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Romeasure)
KrigClayChlo<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$ClayChlo)
Krigwaterporosity<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$waterporosity)
## Predict for production well
#From Raw Data
a <- read.csv("012_Prod_Well.csv", as.is=T)
a <- a %>% select(Entity, API, Surface.Latitude, Surface.Longitude) %>% filter(!is.na(API),!is.na(Surface.Latitude),!is.na(Surface.Longitude))  # Location
b <- read.csv("013_Prod_Header.csv", as.is=T)
b <- b %>% select(Entity, Date.Production.Start) %>% filter(!is.na(Date.Production.Start))  # Prod start date
ab <- left_join(a, b, by="Entity")
ab <- ab %>% distinct(API) %>% rename(Uwi=API, Latitude=Surface.Latitude, Longitude=Surface.Longitude)
ab$Date.Production.Start <- as.Date(ab$Date.Production.Start, format="%Y-%m-%d")
prod.date.loc <- ab
c<-read.csv("020_Well_Header.csv",as.is=T)
c<-c %>% distinct(UWI) %>% select (Uwi=UWI,Depth.True.Vertical)
abc<- inner_join(ab,c,by='Uwi')
abc<-abc[,-5]
# Kaggle oil update
setwd(file.path(repo_path, "Kaggle/Final/RulesBasedApproach Oct 8/RulesBasedApproach Oct 8"))
y <- read.csv("Rules features using recent and Jan 2014 data.csv")
y <- select(y,Uwi)  # 2631 x 1
abc<-inner_join(abc,y,by='Uwi')
predic.Tmax<-predict(KrigTmax,as.matrix(abc[,3:4]))
predic.S2<-predict(KrigS2,as.matrix(abc[,3:4]))
predic.Romeasure<-predict(KrigRomeasure,as.matrix(abc[,3:4]))
predic.ClayChlo<-predict(KrigClayChlo,as.matrix(abc[,3:4]))
predic.waterporosity<-predict(Krigwaterporosity,as.matrix(abc[,3:4]))
newabc<-cbind(abc,Tmax=predic.Tmax,S2=predic.S2,Romeasure=predic.Romeasure,ClayChlo=predic.ClayChlo,waterporosity=predic.waterporosity)
setwd("Z:/project/data")
write.csv(newabc,file='Interpolation for top five variables for production well(no truncation).csv')
##########Use truncate mean rather than mean(10% on both side)#####################
Trunsumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE,trim=0.1),S2=mean(S2,na.rm=TRUE,trim=0.1),Romeasure=mean(Romeasure,na.rm=TRUE,trim=0.1))
#Trunsumnewdata1<-filter(Trunsumnewdata1,!is.na(Tmax))
Trunsumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE,trim=0.1),waterporosity=mean(waterporosity,na.rm=TRUE,trim=0.1))
#Trunsumnewdata3<-filter(Trunsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
TrunKrigTmax<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Tmax)
TrunKrigS2<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$S2)
TrunKrigRomeasure<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Romeasure)
TrunKrigClayChlo<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$ClayChlo)
TrunKrigwaterporosity<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$waterporosity)
## Predict for production well
Trunpredic.Tmax<-predict(TrunKrigTmax,as.matrix(abc[,3:4]))
Trunpredic.S2<-predict(TrunKrigS2,as.matrix(abc[,3:4]))
Trunpredic.Romeasure<-predict(TrunKrigRomeasure,as.matrix(abc[,3:4]))
Trunpredic.ClayChlo<-predict(TrunKrigClayChlo,as.matrix(abc[,3:4]))
Trunpredic.waterporosity<-predict(TrunKrigwaterporosity,as.matrix(abc[,3:4]))
Trunnewabc<-cbind(abc,Tmax=Trunpredic.Tmax,S2=Trunpredic.S2,Romeasure=Trunpredic.Romeasure,ClayChlo=Trunpredic.ClayChlo,waterporosity=Trunpredic.waterporosity)
setwd("Z:/project/data")
write.csv(Trunnewabc,file='Interpolation for top five variables for production well(10% truncation).csv')
##########Use mean without outliers#####################
#Define a function to calculate mean without outliers
normal_mean <- function(x) {
qnt <- quantile(x, probs=c(.25, .75),na.rm=TRUE)
H <- 1.5 * IQR(x,na.rm=TRUE)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
return(mean(y,na.rm=TRUE))
}
Norsumnewdata1<-summarise(newdata1,Tmax=normal_mean(Tmax),S2=normal_mean(S2),Romeasure=normal_mean(Romeasure))
#Norsumnewdata1<-filter(Norsumnewdata1,!is.na(Tmax))
Norsumnewdata3<-summarise(newdata3,ClayChlo=normal_mean(ClayChlo),waterporosity=normal_mean(waterporosity))
#Norsumnewdata3<-filter(Norsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
NorKrigTmax<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Tmax)
NorKrigS2<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$S2)
NorKrigRomeasure<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Romeasure)
NorKrigClayChlo<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$ClayChlo)
NorKrigwaterporosity<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$waterporosity)
## Predict for production well
Norpredic.Tmax<-predict(NorKrigTmax,as.matrix(abc[,3:4]))
Norpredic.S2<-predict(NorKrigS2,as.matrix(abc[,3:4]))
Norpredic.Romeasure<-predict(NorKrigRomeasure,as.matrix(abc[,3:4]))
Norpredic.ClayChlo<-predict(NorKrigClayChlo,as.matrix(abc[,3:4]))
Norpredic.waterporosity<-predict(NorKrigwaterporosity,as.matrix(abc[,3:4]))
Nornewabc<-cbind(abc,Tmax=Norpredic.Tmax,S2=Norpredic.S2,Romeasure=Norpredic.Romeasure,ClayChlo=Norpredic.ClayChlo,waterporosity=Norpredic.waterporosity)
setwd("Z:/project/data")
write.csv(Nornewabc,file='Interpolation for top five variables for production well(outlier removed).csv')
######################################################################################################################
rm(list=ls())
######################################################################################################################
# Header file
######################################################################################################################
#---------------------------------------------------------------------------------------------------------------------
### Setup
#---------------------------------------------------------------------------------------------------------------------
rm(list=ls())
options(scipen=999)
# options(java.parameters = "-Xmx10000m")
options(java.parameters = "-Xmx1g")
#---------------------------------------------------------------------------------------------------------------------
### Library
#---------------------------------------------------------------------------------------------------------------------
library(ggplot2)
library(dplyr)
library(kriging)
library(geoR)
library(fields)
#---------------------------------------------------------------------------------------------------------------------
### Project folder path
#---------------------------------------------------------------------------------------------------------------------
#repo_path = "C:/Apps/projects/xxx"
repo_path = "Z:/project"
######################################################################################################################
# Load Data
######################################################################################################################
#---------------------------------------------------------------------------------------------------------------------
### Data path
#---------------------------------------------------------------------------------------------------------------------
wd <- getwd()
setwd(file.path(repo_path, "/data"))
#---------------------------------------------------------------------------------------------------------------------
### Load data
#---------------------------------------------------------------------------------------------------------------------
#@@corewell data1
data1<-read.csv('031_Core_GeoChem.csv',header=TRUE,as.is=TRUE)
data1<-data1[-1,]
newdata1<-select(data1,UWI=Unique.Private.Well.ID, latitude=Well.Latitude, longitude=Well.Longitude
,Tmax=Tmax..degrees.C., S2=Hydrocarbon...S2..mg.g., Romeasure=Ro.Measured..percent.)
newdata1<-arrange(newdata1,UWI)
newdata1[,2]<-as.numeric(newdata1[,2])
newdata1[,3]<-as.numeric(newdata1[,3])
newdata1[,4]<-as.numeric(newdata1[,4])
newdata1[,5]<-as.numeric(newdata1[,5])
newdata1[,6]<-as.numeric(newdata1[,6])
newdata1<-group_by(newdata1,UWI,latitude,longitude)
#@@corewell data2
#data2<-read.csv('032_Core_RCA.csv',header=TRUE)
#@@corewell data3
data3<-read.csv('033_Core_ShaleGas.csv',header=TRUE,as.is=TRUE)
data3<-data3[-1,]
newdata3<-select(data3,UWI=Unique.Private.Well.ID, latitude=Well.Latitude, longitude=Well.Longitude,
ClayChlo=XRD.Clay.Fraction.Chlorite..weight.percent.,
waterporosity=GRI.Water.Filled.Porosity..percent.)
newdata3<-arrange(newdata3,UWI)
newdata3[,2]<-as.numeric(newdata3[,2])
newdata3[,3]<-as.numeric(newdata3[,3])
newdata3[,4]<-as.numeric(newdata3[,4])
newdata3[,5]<-as.numeric(newdata3[,5])
newdata3<-group_by(newdata3,UWI,latitude,longitude)
#@@corewell data4
#data4<-read.csv('034_Core_SCAL.csv',header=TRUE)
#@@Production well location + Prod start time + true depth
a <- read.csv("012_Prod_Well.csv", as.is=T)
a <- a %>% select(Entity, API, Surface.Latitude, Surface.Longitude) %>% filter(!is.na(API),!is.na(Surface.Latitude),!is.na(Surface.Longitude))  # Location
b <- read.csv("013_Prod_Header.csv", as.is=T)
b <- b %>% select(Entity, Date.Production.Start) %>% filter(!is.na(Date.Production.Start))  # Prod start date
ab <- left_join(a, b, by="Entity")
ab <- ab %>% distinct(API) %>% rename(Uwi=API, Latitude=Surface.Latitude, Longitude=Surface.Longitude)
ab$Date.Production.Start <- as.Date(ab$Date.Production.Start, format="%Y-%m-%d")
prod.date.loc <- ab
c<-read.csv("020_Well_Header.csv",as.is=T)
c<-c %>% distinct(UWI) %>% select (Uwi=UWI,Depth.True.Vertical)
abc<- inner_join(ab,c,by='Uwi')
abc<-abc[,-5]
setwd(file.path(repo_path, "/data/Kaggle/Final/RulesBasedApproach Oct 8/RulesBasedApproach Oct 8"))
y <- read.csv("Rules features using recent and Jan 2014 data.csv")
y <- select(y,Uwi)  # 2631 x 1
abc<-inner_join(abc,y,by='Uwi')
#---------------------------------------------------------------------------------------------------------------------
### Reset working dir
#---------------------------------------------------------------------------------------------------------------------
setwd(wd)
setwd("Z:/project/code")
source("header.R")
source("loadData.R")
setwd(file.path(repo_path, "/data"))
#================================================================================================================================
# Universal Kriging Approach ###
#================================================================================================================================
##@Kriging using mean as aggregate method
##Aggregate data
sumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE),S2=mean(S2,na.rm=TRUE),Romeasure=mean(Romeasure,na.rm=TRUE))
#sumnewdata1<-filter(sumnewdata1,!is.na(Tmax))
sumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE),waterporosity=mean(waterporosity,na.rm=TRUE))
#sumnewdata3<-filter(sumnewdata1,!is.na(Tmax))
##Variogram check
#lookb=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
#lookc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='cloud')
#lookbc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,bin.cloud=TRUE)
#par(mfrow=c(2,2))
#looks=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='sm',band=1)
#plot(lookb, main="binned variogram")
#plot(lookbc, bin.cloud=TRUE, main="clouds for binned variogram")
#plot(lookc, main="variogram cloud")
#plot(looks, main="smoothed variogram")
##Kriging for Five variables
#look4=variog4(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
KrigTmax<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Tmax)
KrigS2<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$S2)
KrigRomeasure<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Romeasure)
KrigClayChlo<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$ClayChlo)
Krigwaterporosity<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$waterporosity)
##Predict for production well
predic.Tmax<-predict(KrigTmax,as.matrix(abc[,3:4]))
predic.S2<-predict(KrigS2,as.matrix(abc[,3:4]))
predic.Romeasure<-predict(KrigRomeasure,as.matrix(abc[,3:4]))
predic.ClayChlo<-predict(KrigClayChlo,as.matrix(abc[,3:4]))
predic.waterporosity<-predict(Krigwaterporosity,as.matrix(abc[,3:4]))
newabc<-cbind(abc,Tmax=predic.Tmax,S2=predic.S2,Romeasure=predic.Romeasure,ClayChlo=predic.ClayChlo,waterporosity=predic.waterporosity)
write.csv(newabc,file='Interpolation for top five variables for production well(no truncation).csv')
##@Kriging using trimmed mean (10%) as aggregate method
##Aggregate data
Trunsumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE,trim=0.1),S2=mean(S2,na.rm=TRUE,trim=0.1),Romeasure=mean(Romeasure,na.rm=TRUE,trim=0.1))
#Trunsumnewdata1<-filter(Trunsumnewdata1,!is.na(Tmax))
Trunsumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE,trim=0.1),waterporosity=mean(waterporosity,na.rm=TRUE,trim=0.1))
#Trunsumnewdata3<-filter(Trunsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
TrunKrigTmax<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Tmax)
TrunKrigS2<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$S2)
TrunKrigRomeasure<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Romeasure)
TrunKrigClayChlo<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$ClayChlo)
TrunKrigwaterporosity<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$waterporosity)
##Predict for production well
Trunpredic.Tmax<-predict(TrunKrigTmax,as.matrix(abc[,3:4]))
Trunpredic.S2<-predict(TrunKrigS2,as.matrix(abc[,3:4]))
Trunpredic.Romeasure<-predict(TrunKrigRomeasure,as.matrix(abc[,3:4]))
Trunpredic.ClayChlo<-predict(TrunKrigClayChlo,as.matrix(abc[,3:4]))
Trunpredic.waterporosity<-predict(TrunKrigwaterporosity,as.matrix(abc[,3:4]))
Trunnewabc<-cbind(abc,Tmax=Trunpredic.Tmax,S2=Trunpredic.S2,Romeasure=Trunpredic.Romeasure,ClayChlo=Trunpredic.ClayChlo,waterporosity=Trunpredic.waterporosity)
write.csv(Trunnewabc,file='Interpolation for top five variables for production well(10% truncation).csv')
##@Kriging using mean calcaulated without outliers as aggregate method
##Define a function to calculate mean without outliers
normal_mean <- function(x) {
qnt <- quantile(x, probs=c(.25, .75),na.rm=TRUE)
H <- 1.5 * IQR(x,na.rm=TRUE)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
return(mean(y,na.rm=TRUE))
}
##Aggregate data
Norsumnewdata1<-summarise(newdata1,Tmax=normal_mean(Tmax),S2=normal_mean(S2),Romeasure=normal_mean(Romeasure))
#Norsumnewdata1<-filter(Norsumnewdata1,!is.na(Tmax))
Norsumnewdata3<-summarise(newdata3,ClayChlo=normal_mean(ClayChlo),waterporosity=normal_mean(waterporosity))
#Norsumnewdata3<-filter(Norsumnewdata1,!is.na(Tmax))
#Kriging for Five variables
NorKrigTmax<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Tmax)
NorKrigS2<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$S2)
NorKrigRomeasure<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Romeasure)
NorKrigClayChlo<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$ClayChlo)
NorKrigwaterporosity<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$waterporosity)
##Predict for production well
Norpredic.Tmax<-predict(NorKrigTmax,as.matrix(abc[,3:4]))
Norpredic.S2<-predict(NorKrigS2,as.matrix(abc[,3:4]))
Norpredic.Romeasure<-predict(NorKrigRomeasure,as.matrix(abc[,3:4]))
Norpredic.ClayChlo<-predict(NorKrigClayChlo,as.matrix(abc[,3:4]))
Norpredic.waterporosity<-predict(NorKrigwaterporosity,as.matrix(abc[,3:4]))
Nornewabc<-cbind(abc,Tmax=Norpredic.Tmax,S2=Norpredic.S2,Romeasure=Norpredic.Romeasure,ClayChlo=Norpredic.ClayChlo,waterporosity=Norpredic.waterporosity)
write.csv(Nornewabc,file='Interpolation for top five variables for production well(outlier removed).csv')
source("header.R")
source("header.R")
setwd("Z:/project/code")
source(header.R)
source('header.R')
setwd("Z:/project/code/")
source('header.R')
setwd("Z:/project/code")
source('header.R')
source("loadData.R")
setwd("Z:/project/code")
source('header.R')
setwd("Z:/project/code")
getwd()
source('header.R')
setwd("Z:/project/code")
source('header.R')
source("loadData.R")
setwd(file.path(repo_path, "/data"))
setwd("Z:/project/code")
source('header.R')
source("loadData.R")
setwd(file.path(repo_path, "/data"))
#================================================================================================================================
# Universal Kriging Approach ###
#================================================================================================================================
##@Kriging using mean as aggregate method
##Aggregate data
sumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE),S2=mean(S2,na.rm=TRUE),Romeasure=mean(Romeasure,na.rm=TRUE))
#sumnewdata1<-filter(sumnewdata1,!is.na(Tmax))
sumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE),waterporosity=mean(waterporosity,na.rm=TRUE))
#sumnewdata3<-filter(sumnewdata1,!is.na(Tmax))
##Variogram check
#lookb=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
#lookc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='cloud')
#lookbc=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,bin.cloud=TRUE)
#looks=variog(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax,op='sm',band=1)
#par(mfrow=c(2,2))
#plot(lookb, main="binned variogram")
#plot(lookc, main="variogram cloud")
#plot(lookbc, bin.cloud=TRUE, main="clouds for binned variogram")
#plot(looks, main="smoothed variogram")
#look4=variog4(coords=sumnewdata1[,2:3],data=sumnewdata1$Tmax)
##Kriging for Five variables
KrigTmax<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Tmax)
KrigS2<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$S2)
KrigRomeasure<-Krig(x=sumnewdata1[,2:3], Y=sumnewdata1$Romeasure)
KrigClayChlo<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$ClayChlo)
Krigwaterporosity<-Krig(x=sumnewdata3[,2:3], Y=sumnewdata3$waterporosity)
##Predict for production well
predic.Tmax<-predict(KrigTmax,as.matrix(abc[,3:4]))
predic.S2<-predict(KrigS2,as.matrix(abc[,3:4]))
predic.Romeasure<-predict(KrigRomeasure,as.matrix(abc[,3:4]))
predic.ClayChlo<-predict(KrigClayChlo,as.matrix(abc[,3:4]))
predic.waterporosity<-predict(Krigwaterporosity,as.matrix(abc[,3:4]))
newabc<-cbind(abc,Tmax=predic.Tmax,S2=predic.S2,Romeasure=predic.Romeasure,ClayChlo=predic.ClayChlo,waterporosity=predic.waterporosity)
write.csv(newabc,file='Interpolation for top five variables for production well(no truncation).csv')
##@Kriging using trimmed mean (10%) as aggregate method
##Aggregate data
Trunsumnewdata1<-summarise(newdata1,Tmax=mean(Tmax,na.rm=TRUE,trim=0.1),S2=mean(S2,na.rm=TRUE,trim=0.1),Romeasure=mean(Romeasure,na.rm=TRUE,trim=0.1))
#Trunsumnewdata1<-filter(Trunsumnewdata1,!is.na(Tmax))
Trunsumnewdata3<-summarise(newdata3,ClayChlo=mean(ClayChlo,na.rm=TRUE,trim=0.1),waterporosity=mean(waterporosity,na.rm=TRUE,trim=0.1))
#Trunsumnewdata3<-filter(Trunsumnewdata1,!is.na(Tmax))
##Kriging for Five variables
TrunKrigTmax<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Tmax)
TrunKrigS2<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$S2)
TrunKrigRomeasure<-Krig(x=Trunsumnewdata1[,2:3], Y=Trunsumnewdata1$Romeasure)
TrunKrigClayChlo<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$ClayChlo)
TrunKrigwaterporosity<-Krig(x=Trunsumnewdata3[,2:3], Y=Trunsumnewdata3$waterporosity)
##Predict for production well
Trunpredic.Tmax<-predict(TrunKrigTmax,as.matrix(abc[,3:4]))
Trunpredic.S2<-predict(TrunKrigS2,as.matrix(abc[,3:4]))
Trunpredic.Romeasure<-predict(TrunKrigRomeasure,as.matrix(abc[,3:4]))
Trunpredic.ClayChlo<-predict(TrunKrigClayChlo,as.matrix(abc[,3:4]))
Trunpredic.waterporosity<-predict(TrunKrigwaterporosity,as.matrix(abc[,3:4]))
Trunnewabc<-cbind(abc,Tmax=Trunpredic.Tmax,S2=Trunpredic.S2,Romeasure=Trunpredic.Romeasure,ClayChlo=Trunpredic.ClayChlo,waterporosity=Trunpredic.waterporosity)
write.csv(Trunnewabc,file='Interpolation for top five variables for production well(10% truncation).csv')
##@Kriging using mean calcaulated without outliers as aggregate method
##Define a function to calculate mean without outliers
normal_mean <- function(x) {
qnt <- quantile(x, probs=c(.25, .75),na.rm=TRUE)
H <- 1.5 * IQR(x,na.rm=TRUE)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
return(mean(y,na.rm=TRUE))
}
##Aggregate data
Norsumnewdata1<-summarise(newdata1,Tmax=normal_mean(Tmax),S2=normal_mean(S2),Romeasure=normal_mean(Romeasure))
#Norsumnewdata1<-filter(Norsumnewdata1,!is.na(Tmax))
Norsumnewdata3<-summarise(newdata3,ClayChlo=normal_mean(ClayChlo),waterporosity=normal_mean(waterporosity))
#Norsumnewdata3<-filter(Norsumnewdata1,!is.na(Tmax))
#Kriging for Five variables
NorKrigTmax<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Tmax)
NorKrigS2<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$S2)
NorKrigRomeasure<-Krig(x=Norsumnewdata1[,2:3], Y=Norsumnewdata1$Romeasure)
NorKrigClayChlo<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$ClayChlo)
NorKrigwaterporosity<-Krig(x=Norsumnewdata3[,2:3], Y=Norsumnewdata3$waterporosity)
##Predict for production well
Norpredic.Tmax<-predict(NorKrigTmax,as.matrix(abc[,3:4]))
Norpredic.S2<-predict(NorKrigS2,as.matrix(abc[,3:4]))
Norpredic.Romeasure<-predict(NorKrigRomeasure,as.matrix(abc[,3:4]))
Norpredic.ClayChlo<-predict(NorKrigClayChlo,as.matrix(abc[,3:4]))
Norpredic.waterporosity<-predict(NorKrigwaterporosity,as.matrix(abc[,3:4]))
Nornewabc<-cbind(abc,Tmax=Norpredic.Tmax,S2=Norpredic.S2,Romeasure=Norpredic.Romeasure,ClayChlo=Norpredic.ClayChlo,waterporosity=Norpredic.waterporosity)
write.csv(Nornewabc,file='Interpolation for top five variables for production well(outlier removed).csv')
